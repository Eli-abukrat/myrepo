# Git Basics (commit, diff, branches)

1.touch abc.txt --- echo "1">abc.txt
2.the color is red - using git status
3.git add--abc.txt using git status color green commit using git commit -m "add the new file abc.txt"
4.using echo "2">abc.txt
5.the color is different red file modified
6.git diff
7.using git diff --staged It doesnt show any changes because the file abc.txt is in working tree
8.diff stage2 return fatal error because stage 2 in unknown path and it is not in the working tree and we sould use the separator -- before.
9.git add abc.txt git status = green
10.git diff print nothing because all of the changes as been commented
11.git diff --staged
12.echo 3 >> abc.txt
13.not the same output because the git diff shows the different between the working area to the staging area.
14.the file appear twice because one time (add 2) we commented the file color green.and the second time we change the file (add 3) the color is red
   and it let you know that you need to commit one file.
15.git reset --hard

# Resolve conflicts

1.git branch
2.git checkout -b feature/lambda_migration
3.git merge feature/version1
4.using Pycharm UI.
5. conflict resolved using GUI
   1. click merge.
   2. i use all to resolve oll conflict
   3. checking the author of the commit with git blame
   4. i accepted port 8081 by John,and denied Narayan's port 8082
   5. i accepted get_profile_picture as the function name and blocked John's name.
6.yes, there was two new commits the first one is the merge we did throw the cli and the second one
 is the merge we did throw the gui.

# Cherry picking

1.
2.
3.
    1.
    2.
4.
5.


# Changes in working tree and switch branches

1.git branch
2.
3.
4.
5.
6.

# Reset

1.git checkout reset_question
2.git log
   1.
   2.
   3.
   4.
3.


# Working with GitHub

1.create new repo and name it myrepo,  generate ssh keygen and add it to the ssh keygen agent in the github
2.
3.
4.